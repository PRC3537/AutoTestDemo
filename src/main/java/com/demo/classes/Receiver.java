package com.demo.classes;import java.io.IOException;import java.io.PipedInputStream;/** * @program: AutoTestDemo * @description: 接收者线程 * @author: gonghuihui * @create: 2018-10-12 15:32 **/public class Receiver extends Thread {    //管道输入流对象    private PipedInputStream in = new PipedInputStream();    // 获得管道对象    public PipedInputStream getInputStream() {        return in;    }    @Override    public void run() {        readMessageOnce();    }    // 从"管道输入流" 中读取1次数据    private void readMessageOnce() {        // 虽然buf的大小是2048，但最多只会从"管道输入流"中读取1024个字节        // 因为"管道输入流"的缓冲区大小默认是1024个字节        byte[] buf1 = new byte[2048];        try {            int len1 = in.read(buf1);            System.out.println(new String(buf1, 0, len1));            in.close();        } catch (IOException e) {            e.printStackTrace();        }    }    // 从"管道输入流"读取>1024字节时，就停止读取    public void readMessageContinued() {        int total = 0;        while (true) {            byte[] buf2 = new byte[1024];            try {                int len2 = in.read(buf2);                total += len2;                System.out.println(new String(buf2, 0, len2));                // 若读取的字节总数>1024，则退出循环                if (total > 1024)                    break;            } catch (IOException e) {                e.printStackTrace();            }        }        try {            in.close();        } catch (IOException e) {            e.printStackTrace();        }    }}